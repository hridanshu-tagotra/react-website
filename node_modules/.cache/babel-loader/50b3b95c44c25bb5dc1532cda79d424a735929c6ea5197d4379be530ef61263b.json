{"ast":null,"code":"var _jsxFileName = \"/home/ken/my-app/src/components/Test.js\";\nimport { Card, CardContent, CardMedia, Grid, Typography } from '@mui/material';\nimport React from 'react';\nimport log from '../images/log.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  const data = [{\n    title: 'THE TITLE 1',\n    description: 'This is the description 1'\n  }, {\n    title: 'THE TITLE 2',\n    description: 'This is the description 2'\n  }, {\n    title: 'THE TITLE 3',\n    description: 'This is the description 3'\n  }, {\n    title: 'THE TITLE 4',\n    description: 'This is the description 4'\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    sx: {},\n    children: [data.map((data, index) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      md: 4,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          image: log,\n          alt: \"logo\",\n          sx: {\n            height: '50%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["Card","CardContent","CardMedia","Grid","Typography","React","log","jsxDEV","_jsxDEV","Test","data","title","description","container","spacing","sx","children","map","index","item","md","xs","component","image","alt","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ken/my-app/src/components/Test.js"],"sourcesContent":["import { Card, CardContent, CardMedia, Grid, Typography } from '@mui/material'\nimport React from 'react'\nimport log from '../images/log.jpg'\n\nconst Test = () => {\n\n    const data = [\n        {title:'THE TITLE 1', description:'This is the description 1'},\n        {title:'THE TITLE 2', description:'This is the description 2'},\n        {title:'THE TITLE 3', description:'This is the description 3'},\n        {title:'THE TITLE 4', description:'This is the description 4'}\n    ]\n  return (\n    <Grid container spacing={2} sx={{}}>\n        {data.map((data, index) =>(\n            <Grid item key={index} md={4} xs={12}>\n                <Card>\n                    <CardMedia component=\"img\"\n                        image={log}\n                    alt=\"logo\"\n                    sx={{ height: '50%',}}>\n                        \n                    </CardMedia>\n                    <CardContent>\n                        <Typography>\n                            {data.title}\n                        </Typography>\n                        <Typography>\n                            {data.description}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        ))};\n        \n        \n      \n    </Grid>\n  )\n}\n\nexport default Test\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAEC,IAAI,EAAEC,UAAU,QAAQ,eAAe;AAC9E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEf,MAAMC,IAAI,GAAG,CACT;IAACC,KAAK,EAAC,aAAa;IAAEC,WAAW,EAAC;EAA2B,CAAC,EAC9D;IAACD,KAAK,EAAC,aAAa;IAAEC,WAAW,EAAC;EAA2B,CAAC,EAC9D;IAACD,KAAK,EAAC,aAAa;IAAEC,WAAW,EAAC;EAA2B,CAAC,EAC9D;IAACD,KAAK,EAAC,aAAa;IAAEC,WAAW,EAAC;EAA2B,CAAC,CACjE;EACH,oBACEJ,OAAA,CAACL,IAAI;IAACU,SAAS;IAACC,OAAO,EAAE,CAAE;IAACC,EAAE,EAAE,CAAC,CAAE;IAAAC,QAAA,GAC9BN,IAAI,CAACO,GAAG,CAAC,CAACP,IAAI,EAAEQ,KAAK,kBAClBV,OAAA,CAACL,IAAI;MAACgB,IAAI;MAAaC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,EAAG;MAAAL,QAAA,eACjCR,OAAA,CAACR,IAAI;QAAAgB,QAAA,gBACDR,OAAA,CAACN,SAAS;UAACoB,SAAS,EAAC,KAAK;UACtBC,KAAK,EAAEjB,GAAI;UACfkB,GAAG,EAAC,MAAM;UACVT,EAAE,EAAE;YAAEU,MAAM,EAAE;UAAM;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC,eACZrB,OAAA,CAACP,WAAW;UAAAe,QAAA,gBACRR,OAAA,CAACJ,UAAU;YAAAY,QAAA,EACNN,IAAI,CAACC;UAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACbrB,OAAA,CAACJ,UAAU;YAAAY,QAAA,EACNN,IAAI,CAACE;UAAW;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ;IAAC,GAhBKX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBf,CACT,CAAC,EAAC,GAIP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEX,CAAC;AAAAC,EAAA,GAnCKrB,IAAI;AAqCV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}